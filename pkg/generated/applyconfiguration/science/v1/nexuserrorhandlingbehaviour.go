/*
Copyright 2024-2026 ECCO Data & AI Open-Source Project Maintainers.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// NexusErrorHandlingBehaviourApplyConfiguration represents a declarative configuration of the NexusErrorHandlingBehaviour type for use
// with apply.
type NexusErrorHandlingBehaviourApplyConfiguration struct {
	TransientExitCodes []int32 `json:"transientExitCodes,omitempty"`
	FatalExitCodes     []int32 `json:"fatalExitCodes,omitempty"`
}

// NexusErrorHandlingBehaviourApplyConfiguration constructs a declarative configuration of the NexusErrorHandlingBehaviour type for use with
// apply.
func NexusErrorHandlingBehaviour() *NexusErrorHandlingBehaviourApplyConfiguration {
	return &NexusErrorHandlingBehaviourApplyConfiguration{}
}

// WithTransientExitCodes adds the given value to the TransientExitCodes field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the TransientExitCodes field.
func (b *NexusErrorHandlingBehaviourApplyConfiguration) WithTransientExitCodes(values ...int32) *NexusErrorHandlingBehaviourApplyConfiguration {
	for i := range values {
		b.TransientExitCodes = append(b.TransientExitCodes, values[i])
	}
	return b
}

// WithFatalExitCodes adds the given value to the FatalExitCodes field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the FatalExitCodes field.
func (b *NexusErrorHandlingBehaviourApplyConfiguration) WithFatalExitCodes(values ...int32) *NexusErrorHandlingBehaviourApplyConfiguration {
	for i := range values {
		b.FatalExitCodes = append(b.FatalExitCodes, values[i])
	}
	return b
}
